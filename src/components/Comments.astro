---
import { getLangFromUrl } from '@/i18n/utils'

const lang = getLangFromUrl(Astro.url)
---

<section class="mx-auto mt-10">
  <script
    is:inline
    id="giscusConfig"
    src="https://giscus.app/client.js"
    data-repo="gaomingzhao666/nano-blog"
    data-repo-id="R_kgDONBEXlA"
    data-category="General"
    data-category-id="DIC_kwDONBEXlM4ClsBN"
    data-mapping="og:title"
    data-strict="0"
    data-reactions-enabled="1"
    data-emit-metadata="0"
    data-input-position="bottom"
    data-theme="preferred_color_scheme"
    data-lang={lang}
    data-loading="lazy"
    crossorigin="anonymous"
    async></script>
</section>

<script is:inline>
  // update giscus theme by sending message
  const updateGiscusTheme = () => {
    const theme = document.documentElement.classList.contains('dark')
      ? 'dark'
      : 'light'

    const iframe = document.querySelector('iframe.giscus-frame')

    if (iframe)
      iframe.contentWindow.postMessage(
        { giscus: { setConfig: { theme } } },
        'https://giscus.app',
      )
  }

  // update giscus theme when html class changes
  const observer = new MutationObserver(updateGiscusTheme)
  const html = document.querySelector('html')
  observer.observe(html, {
    attributes: true,
    attributeFilter: ['class'],
  })

  // update giscus theme on page load
  window.addEventListener('DOMContentLoaded', () => {
    const giscusConfig = document.querySelector('#giscusConfig')

    if (giscusConfig) {
      const theme = document.documentElement.classList.contains('dark')
        ? 'dark'
        : 'light'
      giscusConfig.setAttribute('data-theme', theme)
    }
  })
</script>
