---
import CloseIcon from '@/components/icons/Close'
import SearchIcon from '@/components/icons/Search'
import Search from 'astro-pagefind/components/Search'

interface Props {
  title: string
  rerender?: boolean
}

const { title, rerender = true }: Props = Astro.props
---

<!-- because the button size is different with the icon size, need to set the same width and height with the icon to keep it layout correctly -->
<button
  id="openSearchPage"
  class="w-[24px] h-[24px]"
  aria-label="Search Blog Contents"
>
  <SearchIcon />
</button>

<dialog
  id="SearchPage"
  class="hidden w-screen h-screen fixed inset-0 justify-center items-center transition-opacity opacity-0"
>
  <div
    id="SearchPageContent"
    class="size-full overflow-y-scroll bg-white dark:bg-black dark:text-white p-10 transform transition-transform"
  >
    <section class="flex justify-between items-center mb-10">
      <h1 class="text-3xl">{title}</h1>

      <button id="closeSearchPage" aria-label="Close Search Page">
        <CloseIcon />
      </button>
    </section>

    <section class="text-start">
      <Search
        id="search"
        className="pagefind-ui"
        uiOptions={{ showImages: true }}
      />
    </section>
  </div>
</dialog>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const SearchPage: HTMLElement | null = document.getElementById('SearchPage')
    const SearchPageContent: HTMLElement | null =
      document.getElementById('SearchPageContent')
    const openSearchPage: HTMLElement | null =
      document.getElementById('openSearchPage')
    const closeSearchPage: HTMLElement | null =
      document.getElementById('closeSearchPage')

    const openModal = () => {
      if (SearchPage && SearchPageContent) {
        SearchPage.style.display = 'flex'

        requestAnimationFrame(() => {
          SearchPage.style.opacity = '1'
          SearchPageContent.classList.add('transition-transform', 'show') // Trigger scale animation
        })
      }
    }

    const closeModal = () => {
      if (SearchPage && SearchPageContent) {
        SearchPage.style.opacity = '0'

        setTimeout(() => {
          SearchPage.style.display = 'none'
          SearchPageContent.classList.remove('transition-transform', 'show') // Reset show class
        }, 300)
      }
    }

    // click outside of modal content to close modal
    // if (modal)
    //   modal.addEventListener('click', (e) => {
    //     if (e.target === modal) {
    //       closeModal()
    //     }
    //   })

    if (closeSearchPage) closeSearchPage.addEventListener('click', closeModal)
    if (openSearchPage) openSearchPage.addEventListener('click', openModal)
  })
</script>

<style>
  /* tailwindcss preset */
  /* theme: {
    extend: {
      colors: {
        grayDeep: '#1f2b3a',
        grayLight: '#f8f8f8',
      },
      fontFamily: {
        body: ['Manrope', ...defaultTheme.fontFamily.sans],
      },
    },
  }, */
  .pagefind-ui {
    --pagefind-ui-scale: 1;
    --pagefind-ui-primary: #034ad8;
    --pagefind-ui-text: #393939;
    --pagefind-ui-background: #ffffff;
    --pagefind-ui-border: #eeeeee;
    --pagefind-ui-tag: #f8f8f8;
    --pagefind-ui-border-width: 2px;
    --pagefind-ui-border-radius: 12px;
    --pagefind-ui-image-border-radius: 12px;
    --pagefind-ui-image-box-ratio: 3 / 2;
    --pagefind-ui-font: Manrope, sans-serif;
  }

  html.dark {
    --pagefind-ui-primary: #f8f8f8;
    --pagefind-ui-text: #f8f8f8;
    --pagefind-ui-background: #1f2b3a;
    --pagefind-ui-border: #1f2b3a;
    --pagefind-ui-tag: #1f2b3a;
  }
</style>
